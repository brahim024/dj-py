# name: Tests

# on:
#   push:
#     branches:
#       - main  # or the branch you want to trigger the workflow on
#   pull_request:
#     branches:
#       - main  # or the branch you want to trigger the workflow on

# jobs:
#   backend-tests:
#     name: Run tests
#     runs-on: ubuntu-latest
#     env:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_HOST: localhost # default host value for the database
#       POSTGRES_DB: djtesting
#       POSTGRES_PORT: 5432
#       DJ_SECRET_KEY: django-insecure-q8n1_1c4*2w!)p=-zvvv-1fe%2vojmcaqb3vah*=d$nha-y8*&

#     services:
#       postgres_main:
#         image: postgres:12
#         env:
#           POSTGRES_USER: ${{ env.POSTGRES_USER }}
#           POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
#           POSTGRES_DB: ${{ env.POSTGRES_DB }}
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.10.5

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         env:
#           DJANGO_SETTINGS_MODULE: core.settings
#           DJANGO_SECRET_KEY: ${{ env.DJ_SECRET_KEY }}
#         run: |
#             export DJANGO_SETTINGS_MODULE=core.settings
#             pip install codecov
#             pip install pytest-cov
#             pytest --cov=./ --cov-report=xml
#             codecov

#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3.1.0
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           directory: ./coverage/reports/
#           env_vars: OS,PYTHON
#           files: /home/runner/work/dj-py/dj-py/coverage.xml
#           flags: tests
